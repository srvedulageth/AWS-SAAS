import { useState, useEffect } from "react";
import { uploadData, getUrl } from "aws-amplify/storage";
import awsExports from "../aws-exports";

    console.log("Amplify Storage Config:", awsExports.Storage);
    Amplify.configure(awsExports);


const FileUpload = () => {
    const [file, setFile] = useState(null);
    const [uploading, setUploading] = useState(false);
    const [files, setFiles] = useState([]);

    useEffect(() => {
        fetchFiles();
    }, []);

    const handleFileChange = (e) => {
        setFile(e.target.files[0]);
    };

    const handleUpload = async () => {
        if (!file) {
            alert("Please select a file first!");
            return;
        }

        setUploading(true);
        try {
            const fileName = `uploads/${Date.now()}-${file.name}`;
            await Storage.put(fileName, file, {
                contentType: file.type,
                acl: "public-read",
            });

            fetchFiles(); // Refresh the file list
            alert("File uploaded successfully!");
        } catch (error) {
            console.error("Upload error:", error);
            alert("File upload failed!");
        } finally {
            setUploading(false);
        }
    };

    const fetchFiles = async () => {
        try {
            const fileList = await Storage.list("uploads/", { level: "public" });
            setFiles(fileList);
        } catch (error) {
            console.error("Error fetching files:", error);
        }
    };

    const handleDelete = async (fileKey) => {
        try {
            await Storage.remove(fileKey);
            setFiles(files.filter(file => file.key !== fileKey));
            alert("File deleted successfully!");
        } catch (error) {
            console.error("Error deleting file:", error);
            alert("Failed to delete file!");
        }
    };

    return (
        <div className="flex flex-col items-center p-4">
            <input type="file" onChange={handleFileChange} className="mb-2" />
            <button 
                className="bg-blue-500 text-white p-2 rounded" 
                onClick={handleUpload}
                disabled={uploading}
            >
                {uploading ? "Uploading..." : "Upload"}
            </button>

            <h3 className="text-lg mt-4">Uploaded Files</h3>
            <ul className="w-full max-w-md mt-2">
                {files.map((file, index) => (
                    <li key={index} className="flex justify-between items-center p-2 border-b">
                        <span className="truncate">{file.key}</span>
                        <button 
                            className="bg-red-500 text-white p-1 rounded" 
                            onClick={() => handleDelete(file.key)}
                        >
                            Delete
                        </button>
                    </li>
                ))}
            </ul>
        </div>
    );
};

export default FileUpload;
